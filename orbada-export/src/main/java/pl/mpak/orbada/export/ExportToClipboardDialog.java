/*
 * ExportToClipboardDialog.java
 *
 * Created on 11 paüdziernik 2007, 16:52
 */

package pl.mpak.orbada.export;

import java.nio.charset.Charset;
import javax.swing.JComponent;
import pl.mpak.orbada.plugins.ISettings;
import pl.mpak.sky.gui.mr.ModalResult;
import pl.mpak.sky.gui.swing.SwingUtil;
import pl.mpak.util.ExceptionUtil;
import pl.mpak.util.StringManager;
import pl.mpak.util.StringManagerFactory;
import pl.mpak.util.variant.Variant;

/**
 *
 * @author  akaluza
 */
public class ExportToClipboardDialog extends javax.swing.JDialog {
  
  private StringManager stringManager = StringManagerFactory.getStringManager("export");

  private ISettings config;
  private int modalResult = pl.mpak.sky.gui.mr.ModalResult.NONE;

  /** Creates new form ExportToClipboardDialog 
   * @param config 
   */
  public ExportToClipboardDialog(ISettings config) {
    super(SwingUtil.getRootFrame());
    this.config = config;
    initComponents();
    init();
    getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(cmCancel.getShortCut(), "cmCancel");
    getRootPane().getActionMap().put("cmCancel", cmCancel);
    getRootPane().setDefaultButton(buttonOk);
    configToDialog();
  }
  
  public static boolean showDialog(ISettings config) {
    ExportToClipboardDialog dialog = new ExportToClipboardDialog(config);
    dialog.setVisible(true);
    return dialog.modalResult == ModalResult.OK;
  }
  
  private void init() {
    SwingUtil.centerWithinScreen(this);
    for (Charset charset : Charset.availableCharsets().values()) {
      comboCharSet.addItem(charset.displayName());
    }
  }
  
  private void configToDialog() {
    try {
      radioCurrentRow.setSelected(config.getValue("row-range", new Variant(ExportToClipboard.RANGE_ALL)).getInteger() == ExportToClipboard.RANGE_CURRENT);
      radioAllRows.setSelected(config.getValue("row-range", new Variant(ExportToClipboard.RANGE_ALL)).getInteger() == ExportToClipboard.RANGE_ALL);
      radioCurrentColumn.setSelected(config.getValue("column-range", new Variant(ExportToClipboard.RANGE_ALL)).getInteger() == ExportToClipboard.RANGE_CURRENT);
      radioAllColumns.setSelected(config.getValue("column-range", new Variant(ExportToClipboard.RANGE_ALL)).getInteger() == ExportToClipboard.RANGE_ALL);
      comboSeparator.setSelectedItem(config.getValue("separator", new Variant("TAB")).getString());
      checkRemoveSeparator.setSelected(config.getValue("remove-separator", new Variant(true)).getBoolean());
      checkFullEOL.setSelected(config.getValue("full-eol", new Variant(false)).getBoolean());
      checkIncludeTitles.setSelected(config.getValue("include-titles", new Variant(true)).getBoolean());
      comboCharSet.setSelectedItem(config.getValue("charset", new Variant(Charset.defaultCharset().displayName())).getString());
      checkHorizontal.setSelected(config.getValue("horizontal", new Variant(false)).getBoolean());
      checkGlobalSettings.setSelected(config.getValue("dec-sep-glob-settings").getBoolean());
    } catch (Exception ex) {
      ExceptionUtil.processException(ex);
    }
  }
  
  private void dialogToConfig() {
    if (radioCurrentRow.isSelected()) {
      config.setValue("row-range", new Variant(ExportToClipboard.RANGE_CURRENT));
    }
    if (radioAllRows.isSelected()) {
      config.setValue("row-range", new Variant(ExportToClipboard.RANGE_ALL));
    }
    if (radioCurrentColumn.isSelected()) {
      config.setValue("column-range", new Variant(ExportToClipboard.RANGE_CURRENT));
    }
    if (radioAllColumns.isSelected()) {
      config.setValue("column-range", new Variant(ExportToClipboard.RANGE_ALL));
    }
    config.setValue("separator", new Variant(comboSeparator.getSelectedItem().toString()));
    config.setValue("remove-separator", new Variant(checkRemoveSeparator.isSelected()));
    config.setValue("full-eol", new Variant(checkFullEOL.isSelected()));
    config.setValue("include-titles", new Variant(checkIncludeTitles.isSelected()));
    config.setValue("charset", new Variant(comboCharSet.getSelectedItem().toString()));
    config.setValue("horizontal", new Variant(checkHorizontal.isSelected()));
    config.setValue("dec-sep-glob-settings", new Variant(checkGlobalSettings.isSelected()));
    config.store();
  }
  
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        groupRowRange = new javax.swing.ButtonGroup();
        groupColumnRange = new javax.swing.ButtonGroup();
        cmOk = new pl.mpak.sky.gui.swing.Action();
        cmCancel = new pl.mpak.sky.gui.swing.Action();
        panelRowRange = new javax.swing.JPanel();
        radioCurrentRow = new javax.swing.JRadioButton();
        radioAllRows = new javax.swing.JRadioButton();
        panelColumnRange = new javax.swing.JPanel();
        radioCurrentColumn = new javax.swing.JRadioButton();
        radioAllColumns = new javax.swing.JRadioButton();
        checkHorizontal = new javax.swing.JCheckBox();
        panelSeparator = new javax.swing.JPanel();
        label1 = new javax.swing.JLabel();
        comboSeparator = new javax.swing.JComboBox();
        checkRemoveSeparator = new javax.swing.JCheckBox();
        checkFullEOL = new javax.swing.JCheckBox();
        checkIncludeTitles = new javax.swing.JCheckBox();
        buttonOk = new javax.swing.JButton();
        buttonCancel = new javax.swing.JButton();
        label2 = new javax.swing.JLabel();
        comboCharSet = new javax.swing.JComboBox();
        panelDecimalSeparator = new javax.swing.JPanel();
        checkGlobalSettings = new javax.swing.JCheckBox();

        cmOk.setShortCut(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ENTER, 0));
        cmOk.setText(stringManager.getString("cmOk-text")); // NOI18N
        cmOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmOkActionPerformed(evt);
            }
        });

        cmCancel.setShortCut(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0));
        cmCancel.setText(stringManager.getString("cmCancel-text")); // NOI18N
        cmCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmCancelActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("pl/mpak/orbada/export/i18n"); // NOI18N
        setTitle(bundle.getString("ExportToClipboardDialog-title")); // NOI18N
        setModal(true);

        panelRowRange.setBorder(javax.swing.BorderFactory.createTitledBorder(stringManager.getString("ExportToClipboardDialog-groupRows-border-title"))); // NOI18N

        groupRowRange.add(radioCurrentRow);
        radioCurrentRow.setText(stringManager.getString("ExportToClipboardDialog-radioCurrentRow-text")); // NOI18N

        groupRowRange.add(radioAllRows);
        radioAllRows.setSelected(true);
        radioAllRows.setText(stringManager.getString("ExportToClipboardDialog-radioAllRows-text")); // NOI18N

        javax.swing.GroupLayout panelRowRangeLayout = new javax.swing.GroupLayout(panelRowRange);
        panelRowRange.setLayout(panelRowRangeLayout);
        panelRowRangeLayout.setHorizontalGroup(
            panelRowRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRowRangeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelRowRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radioCurrentRow, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
                    .addComponent(radioAllRows, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelRowRangeLayout.setVerticalGroup(
            panelRowRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRowRangeLayout.createSequentialGroup()
                .addComponent(radioCurrentRow)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radioAllRows))
        );

        panelColumnRange.setBorder(javax.swing.BorderFactory.createTitledBorder(stringManager.getString("ExportToClipboardDialog-groupColumns-border-title"))); // NOI18N

        groupColumnRange.add(radioCurrentColumn);
        radioCurrentColumn.setText(stringManager.getString("ExportToClipboardDialog-radioCurrentColumn-text")); // NOI18N
        radioCurrentColumn.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                radioCurrentColumnStateChanged(evt);
            }
        });

        groupColumnRange.add(radioAllColumns);
        radioAllColumns.setSelected(true);
        radioAllColumns.setText(stringManager.getString("ExportToClipboardDialog-radioAllColumns-text")); // NOI18N

        checkHorizontal.setText(stringManager.getString("ExportToClipboardDialog-checkHorizontal-text")); // NOI18N
        checkHorizontal.setToolTipText(stringManager.getString("ExportToClipboardDialog-checkHorizontal-hint")); // NOI18N
        checkHorizontal.setEnabled(false);

        javax.swing.GroupLayout panelColumnRangeLayout = new javax.swing.GroupLayout(panelColumnRange);
        panelColumnRange.setLayout(panelColumnRangeLayout);
        panelColumnRangeLayout.setHorizontalGroup(
            panelColumnRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelColumnRangeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelColumnRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelColumnRangeLayout.createSequentialGroup()
                        .addComponent(radioCurrentColumn, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkHorizontal))
                    .addComponent(radioAllColumns, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelColumnRangeLayout.setVerticalGroup(
            panelColumnRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelColumnRangeLayout.createSequentialGroup()
                .addGroup(panelColumnRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkHorizontal)
                    .addComponent(radioCurrentColumn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radioAllColumns)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelSeparator.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("ExportToClipboardDialog-groupSeparator-border-title"))); // NOI18N

        label1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        label1.setText(stringManager.getString("ExportToClipboardDialog-separator-dd")); // NOI18N

        comboSeparator.setEditable(true);
        comboSeparator.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "TAB", ";", "," }));
        comboSeparator.setSelectedIndex(1);

        checkRemoveSeparator.setSelected(true);
        checkRemoveSeparator.setText(stringManager.getString("ExportToClipboardDialog-checkRemoveSeparator-text")); // NOI18N

        javax.swing.GroupLayout panelSeparatorLayout = new javax.swing.GroupLayout(panelSeparator);
        panelSeparator.setLayout(panelSeparatorLayout);
        panelSeparatorLayout.setHorizontalGroup(
            panelSeparatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSeparatorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelSeparatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(checkRemoveSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                    .addGroup(panelSeparatorLayout.createSequentialGroup()
                        .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboSeparator, 0, 188, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelSeparatorLayout.setVerticalGroup(
            panelSeparatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSeparatorLayout.createSequentialGroup()
                .addGroup(panelSeparatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label1)
                    .addComponent(comboSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkRemoveSeparator)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        checkFullEOL.setText(stringManager.getString("ExportToClipboardDialog-checkFullEOL-text")); // NOI18N

        checkIncludeTitles.setSelected(true);
        checkIncludeTitles.setText(stringManager.getString("ExportToClipboardDialog-checkIncludeTitles-text")); // NOI18N

        buttonOk.setAction(cmOk);
        buttonOk.setPreferredSize(new java.awt.Dimension(75, 23));

        buttonCancel.setAction(cmCancel);
        buttonCancel.setPreferredSize(new java.awt.Dimension(75, 23));

        label2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        label2.setText(stringManager.getString("ExportToClipboardDialog-charcode-dd")); // NOI18N

        comboCharSet.setEditable(true);

        panelDecimalSeparator.setBorder(javax.swing.BorderFactory.createTitledBorder(stringManager.getString("ExportToClipboard-DecimalSeparator.title"))); // NOI18N

        checkGlobalSettings.setText(stringManager.getString("ExportToClipboard-DecSep-globalsettings")); // NOI18N

        javax.swing.GroupLayout panelDecimalSeparatorLayout = new javax.swing.GroupLayout(panelDecimalSeparator);
        panelDecimalSeparator.setLayout(panelDecimalSeparatorLayout);
        panelDecimalSeparatorLayout.setHorizontalGroup(
            panelDecimalSeparatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDecimalSeparatorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(checkGlobalSettings, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelDecimalSeparatorLayout.setVerticalGroup(
            panelDecimalSeparatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDecimalSeparatorLayout.createSequentialGroup()
                .addComponent(checkGlobalSettings)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelDecimalSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(checkFullEOL, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 312, Short.MAX_VALUE)
                            .addComponent(checkIncludeTitles, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 312, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboCharSet, 0, 208, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(panelRowRange, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(buttonOk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(panelColumnRange, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(panelSeparator, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelRowRange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelColumnRange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelDecimalSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(checkFullEOL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkIncludeTitles)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label2)
                    .addComponent(comboCharSet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonOk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void radioCurrentColumnStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_radioCurrentColumnStateChanged
  checkHorizontal.setEnabled(radioCurrentColumn.isSelected());
}//GEN-LAST:event_radioCurrentColumnStateChanged

private void cmCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmCancelActionPerformed
  modalResult = pl.mpak.sky.gui.mr.ModalResult.CANCEL;
  dispose();
}//GEN-LAST:event_cmCancelActionPerformed

private void cmOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmOkActionPerformed
  modalResult = pl.mpak.sky.gui.mr.ModalResult.OK;
  dialogToConfig();
  dispose();
}//GEN-LAST:event_cmOkActionPerformed
  
  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCancel;
    private javax.swing.JButton buttonOk;
    private javax.swing.JCheckBox checkFullEOL;
    private javax.swing.JCheckBox checkGlobalSettings;
    private javax.swing.JCheckBox checkHorizontal;
    private javax.swing.JCheckBox checkIncludeTitles;
    private javax.swing.JCheckBox checkRemoveSeparator;
    private pl.mpak.sky.gui.swing.Action cmCancel;
    private pl.mpak.sky.gui.swing.Action cmOk;
    private javax.swing.JComboBox comboCharSet;
    private javax.swing.JComboBox comboSeparator;
    private javax.swing.ButtonGroup groupColumnRange;
    private javax.swing.ButtonGroup groupRowRange;
    private javax.swing.JLabel label1;
    private javax.swing.JLabel label2;
    private javax.swing.JPanel panelColumnRange;
    private javax.swing.JPanel panelDecimalSeparator;
    private javax.swing.JPanel panelRowRange;
    private javax.swing.JPanel panelSeparator;
    private javax.swing.JRadioButton radioAllColumns;
    private javax.swing.JRadioButton radioAllRows;
    private javax.swing.JRadioButton radioCurrentColumn;
    private javax.swing.JRadioButton radioCurrentRow;
    // End of variables declaration//GEN-END:variables
  
}
