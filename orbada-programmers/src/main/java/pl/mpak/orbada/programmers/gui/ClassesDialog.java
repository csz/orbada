/*
 * ResolversDialog.java
 *
 * Created on 28 grudzieñ 2007, 19:08
 */

package pl.mpak.orbada.programmers.gui;

import java.awt.Component;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyVetoException;
import java.beans.VetoableChangeListener;
import javax.swing.FocusManager;
import javax.swing.JComponent;
import pl.mpak.orbada.programmers.OrbadaProgrammersPlugin;
import pl.mpak.orbada.util.Utils;
import pl.mpak.sky.gui.swing.SwingUtil;
import pl.mpak.util.StringManager;
import pl.mpak.util.StringManagerFactory;

/**
 *
 * @author  akaluza
 */
public class ClassesDialog extends javax.swing.JDialog {
  
  private final StringManager stringManager = StringManagerFactory.getStringManager("programmers");

  private VetoableChangeListener focusListener;
  
  /** Creates new form ResolversDialog */
  public ClassesDialog() {
    super(SwingUtil.getRootFrame(), false);
    initComponents();
    init();
  }
  
  public static void showDialog() {
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        ClassesDialog dialog = new ClassesDialog();
        dialog.setVisible(true);
      }
    });
  }

  private void init() {
    refresh(FocusManager.getCurrentManager().getFocusOwner());
    FocusManager.getCurrentManager().addVetoableChangeListener(getFocusListener());
    getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(cmClose.getShortCut(), "cmCancel");
    getRootPane().getActionMap().put("cmCancel", cmClose);
    SwingUtil.centerWithinScreen(this);
  }
  
  @Override
  public void dispose() {
    FocusManager.getCurrentManager().removeVetoableChangeListener(getFocusListener());
    super.dispose();
  }
  
  private VetoableChangeListener getFocusListener() {
    if (focusListener == null) {
      focusListener = new VetoableChangeListener() {
        @Override
        public void vetoableChange(PropertyChangeEvent evt) throws PropertyVetoException {
          if ("focusOwner".equals(evt.getPropertyName()) && evt.getNewValue() != null && evt.getNewValue() instanceof Component) {
            if (!evt.getNewValue().equals(textClasses) && !evt.getNewValue().equals(buttonCancel)) {
              refresh((Component)evt.getNewValue());
            }
          }
        }
      };
    }
    return focusListener;
  }
  
  private void refresh(Component component) {
    String classes = Utils.getComponentClasses(component);
    if (textClasses.getText().length() > 0) {
      textClasses.append("----------------\n");
    }
    textClasses.append(classes);
  }
  
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    cmClose = new pl.mpak.sky.gui.swing.Action();
    buttonCancel = new javax.swing.JButton();
    jScrollPane1 = new javax.swing.JScrollPane();
    textClasses = new javax.swing.JTextArea();

    cmClose.setShortCut(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0));
    cmClose.setText(stringManager.getString("cmClose-text")); // NOI18N
    cmClose.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        cmCloseActionPerformed(evt);
      }
    });

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    setTitle(stringManager.getString("ClassesDialog-title")); // NOI18N

    buttonCancel.setAction(cmClose);
    buttonCancel.setMargin(new java.awt.Insets(2, 2, 2, 2));
    buttonCancel.setPreferredSize(new java.awt.Dimension(75, 23));

    textClasses.setColumns(20);
    textClasses.setEditable(false);
    textClasses.setFont(new java.awt.Font("Courier New", 0, 12));
    textClasses.setRows(5);
    jScrollPane1.setViewportView(textClasses);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 620, Short.MAX_VALUE)
          .addComponent(buttonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 352, Short.MAX_VALUE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(buttonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap())
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void cmCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmCloseActionPerformed
    dispose();
}//GEN-LAST:event_cmCloseActionPerformed
  
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton buttonCancel;
  private pl.mpak.sky.gui.swing.Action cmClose;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JTextArea textClasses;
  // End of variables declaration//GEN-END:variables
  
}
