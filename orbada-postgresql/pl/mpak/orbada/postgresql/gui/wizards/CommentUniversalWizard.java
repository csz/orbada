package pl.mpak.orbada.postgresql.gui.wizards;

import pl.mpak.orbada.postgresql.OrbadaPostgreSQLPlugin;
import pl.mpak.orbada.universal.gui.wizards.SqlCodeWizardPanel;
import pl.mpak.sky.gui.mr.ModalResult;
import pl.mpak.sky.gui.swing.MessageBox;
import pl.mpak.usedb.core.Database;
import pl.mpak.util.StringManager;
import pl.mpak.util.StringManagerFactory;
import pl.mpak.util.StringUtil;

/**
 *
 * @author  akaluza
 */
public class CommentUniversalWizard extends SqlCodeWizardPanel {
  
  private final StringManager stringManager = StringManagerFactory.getStringManager(OrbadaPostgreSQLPlugin.class);

  private Database database;
  private String objectType;
  private String fullObjectName;
  private String typeStringBundle;
  private String description;
  
  public CommentUniversalWizard(Database database, String typeStringBundle, String objectType, String fullObjectName, String description) {
    this.database = database;
    this.typeStringBundle = typeStringBundle;
    this.objectType = objectType;
    this.fullObjectName = fullObjectName;
    this.description = description;
    initComponents();
    init();
  }
  
  private void init() {
    labelObject.setText(stringManager.getString(typeStringBundle));
    textComments.setText(description);
    textObject.setText(fullObjectName);
  }
  
  @Override
  public void wizardShow() {
    java.awt.EventQueue.invokeLater(new Runnable() {
      @Override
      public void run() {
        textComments.requestFocusInWindow();
      }
    });
  }
  
  @Override
  public String getDialogTitle() {
    return stringManager.getString("comment-edit");
  }
  
  @Override
  public String getTabTitle() {
    return stringManager.getString("comment");
  }
  
  @Override
  public String getSqlCode() {
    return
      "COMMENT ON " +objectType +" " +textObject.getText() +
      " IS '" +StringUtil.replaceString(textComments.getText(), "'", "''") +"'";
  }
  
  @Override
  public boolean execute() {
    try {
      database.executeCommand(getSqlCode());
      return true;
    } catch (Exception ex) {
      MessageBox.show(this, stringManager.getString("error"), ex.getMessage(), ModalResult.OK, MessageBox.ERROR);
      return false;
    }
  }
  
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelObject = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        textObject = new pl.mpak.sky.gui.swing.comp.TextField();
        textComments = new pl.mpak.sky.gui.swing.comp.TextField();

        labelObject.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelObject.setText("ObjectName:");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText(stringManager.getString("comment-dd")); // NOI18N

        textObject.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelObject, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textObject, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textComments, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelObject)
                    .addComponent(textObject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(textComments, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
  
  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel labelObject;
    private pl.mpak.sky.gui.swing.comp.TextField textComments;
    private pl.mpak.sky.gui.swing.comp.TextField textObject;
    // End of variables declaration//GEN-END:variables
  
}
