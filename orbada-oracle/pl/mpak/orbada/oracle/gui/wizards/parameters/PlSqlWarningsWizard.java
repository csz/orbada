package pl.mpak.orbada.oracle.gui.wizards.parameters;

import javax.swing.DefaultCellEditor;
import pl.mpak.orbada.oracle.OrbadaOraclePlugin;
import pl.mpak.orbada.oracle.services.OracleDbInfoProvider;
import pl.mpak.orbada.universal.gui.wizards.SqlCodeWizardPanel;
import pl.mpak.sky.gui.mr.ModalResult;
import pl.mpak.sky.gui.swing.MessageBox;
import pl.mpak.usedb.core.Database;
import pl.mpak.util.StringManager;
import pl.mpak.util.StringManagerFactory;
import pl.mpak.util.StringUtil;

/**
 *
 * @author  akaluza
 */
public class PlSqlWarningsWizard extends SqlCodeWizardPanel {
  
  private final StringManager stringManager = StringManagerFactory.getStringManager(OrbadaOraclePlugin.class);

  private Database database;
  
  public PlSqlWarningsWizard(Database database) {
    this.database = database;
    initComponents();
    init();
  }
  
  private void init() {
    checkSystem.setEnabled(OracleDbInfoProvider.instance.getDatabaseInfo(database).getObjectInfo("/SESSION PRIVILEGES/ALTER SYSTEM") != null);
    table.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {
        {null, null},
        {null, null},
        {null, null},
        {null, null},
        {null, null},
        {null, null},
        {null, null},
        {null, null},
        {null, null}
      },
      new String [] {
        stringManager.getString("state"), stringManager.getString("value")
      }
    ) {
      Class[] types = new Class [] {
        java.lang.String.class, java.lang.String.class
      };

      public Class getColumnClass(int columnIndex) {
        return types [columnIndex];
      }
    });
    table.getColumnModel().getColumn(0).setCellEditor(new DefaultCellEditor(comboState));
    table.getColumnModel().getColumn(1).setCellEditor(new DefaultCellEditor(comboDetails));
  }
  
  public void wizardShow() {
  }
  
  public String getDialogTitle() {
    return stringManager.getString("PlSqlWarningsWizard-dialog-title");
  }
  
  public String getTabTitle() {
    return stringManager.getString("PlSqlWarningsWizard-tab-title");
  }
  
  public String getSqlCode() {
    String sets = "";
    for (int r=0; r<table.getRowCount(); r++) {
      Object state = table.getValueAt(r, 0);
      Object value = table.getValueAt(r, 1);
      if (state != null && value != null) {
        if (!StringUtil.isEmpty(sets)) {
          sets = sets +", ";
        }
        sets = sets +"'" +state.toString() +":" +value.toString() +"'";
      }
    }
    return
      "ALTER " +(checkSystem.isSelected() ? "SYSTEM" : "SESSION") +" SET PLSQL_WARNINGS = " +
      sets;
  }
  
  public boolean execute() {
    try {
      database.executeCommand(getSqlCode());
      return true;
    } catch (Exception ex) {
      MessageBox.show(this, stringManager.getString("error"), ex.getMessage(), ModalResult.OK, MessageBox.ERROR);
      return false;
    }
  }
  
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    comboState = new javax.swing.JComboBox();
    comboDetails = new javax.swing.JComboBox();
    jLabel3 = new javax.swing.JLabel();
    checkSystem = new javax.swing.JCheckBox();
    jScrollPane1 = new javax.swing.JScrollPane();
    table = new pl.mpak.orbada.gui.comps.table.Table();

    comboState.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ENABLE", "DISABLE", "ERROR" }));

    comboDetails.setEditable(true);
    comboDetails.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ALL", "SEVERE", "INFORMATIONAL", "PERFORMANCE", "integer", "(integer [, integer ] ...)" }));

    jLabel3.setText(stringManager.getString("plsql-warnings-dd")); // NOI18N

    checkSystem.setText(stringManager.getString("system")); // NOI18N

    table.setPreferredSize(new java.awt.Dimension(150, 162));
    table.setRowHeight(20);
    jScrollPane1.setViewportView(table);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 434, Short.MAX_VALUE)
          .addComponent(checkSystem)
          .addComponent(jLabel3))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jLabel3)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(checkSystem)
        .addContainerGap())
    );
  }// </editor-fold>//GEN-END:initComponents
  
  
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JCheckBox checkSystem;
  private javax.swing.JComboBox comboDetails;
  private javax.swing.JComboBox comboState;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JScrollPane jScrollPane1;
  private pl.mpak.orbada.gui.comps.table.Table table;
  // End of variables declaration//GEN-END:variables
  
}
