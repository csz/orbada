/*
 * JobRemoveWizard.java
 *
 * Created on 5 paŸdziernik 2008, 17:32
 */

package pl.mpak.orbada.oracle.gui.jobs;

import pl.mpak.orbada.oracle.OrbadaOraclePlugin;
import pl.mpak.orbada.universal.gui.wizards.SqlCodeWizardPanel;
import pl.mpak.sky.gui.mr.ModalResult;
import pl.mpak.sky.gui.swing.MessageBox;
import pl.mpak.usedb.core.Database;
import pl.mpak.usedb.script.SimpleSQLScript;
import pl.mpak.util.StringManager;
import pl.mpak.util.StringManagerFactory;

/**
 *
 * @author  akaluza
 */
public class JobRemoveWizard extends SqlCodeWizardPanel {

  private final StringManager stringManager = StringManagerFactory.getStringManager("oracle");

  private Database database;
  private Long job;

  /** Creates new form JobRemoveWizard */
  public JobRemoveWizard(Database database, Long job) {
    this.database = database;
    this.job = job;
    initComponents();
    init();
  }
  
  private void init() {
    
  }
  
  public void wizardShow() {
    
  }

  public String getDialogTitle() {
    return stringManager.getString("JobRemoveWizard-dialog-title");
  }
  
  public String getTabTitle() {
    return stringManager.getString("JobRemoveWizard-tab-title");
  }
  
  public String getSqlCode() {
    StringBuffer sb = new StringBuffer();
    sb.append("BEGIN\n");
    if ("true".equalsIgnoreCase(database.getUserProperties().getProperty("dba-role"))) {
      sb.append("  DBMS_IJOB.REMOVE(\n");
    }
    else {
      sb.append("  DBMS_JOB.REMOVE(\n");
    }
    sb.append("    JOB => " +job +"\n");
    sb.append("  );\n");
    sb.append("END;\n/\n");
    if (checkCommit.isSelected()) {
      sb.append("COMMIT\n/\n");
    }
    return sb.toString();
  }
  
  public boolean execute() {
    SimpleSQLScript script = new SimpleSQLScript(database);
    if (!script.executeScript(getSqlCode())) {
      MessageBox.show(this, stringManager.getString("error"), script.getErrors(), ModalResult.OK, MessageBox.ERROR);
      return false;
    }
    return true;
  }
  
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    checkCommit = new javax.swing.JCheckBox();

    checkCommit.setSelected(true);
    checkCommit.setText(stringManager.getString("commit-changes")); // NOI18N

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(checkCommit)
        .addContainerGap(227, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(checkCommit)
        .addContainerGap(270, Short.MAX_VALUE))
    );
  }// </editor-fold>//GEN-END:initComponents


  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JCheckBox checkCommit;
  // End of variables declaration//GEN-END:variables

}
