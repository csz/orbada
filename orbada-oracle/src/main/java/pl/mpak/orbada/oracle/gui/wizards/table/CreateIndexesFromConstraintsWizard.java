package pl.mpak.orbada.oracle.gui.wizards.table;

import pl.mpak.orbada.oracle.OrbadaOraclePlugin;
import pl.mpak.orbada.universal.gui.wizards.SqlCodeWizardPanel;
import pl.mpak.orbada.oracle.gui.util.TableComboBoxModel;
import pl.mpak.orbada.oracle.gui.util.TablespaceComboBoxModel;
import pl.mpak.sky.gui.mr.ModalResult;
import pl.mpak.sky.gui.swing.MessageBox;
import pl.mpak.usedb.core.Database;
import pl.mpak.util.StringManager;
import pl.mpak.util.StringManagerFactory;

/**
 *
 * @author  akaluza
 */
public class CreateIndexesFromConstraintsWizard extends SqlCodeWizardPanel {
  
  private final StringManager stringManager = StringManagerFactory.getStringManager(OrbadaOraclePlugin.class);

  private Database database;
  private String schemaName;
  private String tableName;
  
  public CreateIndexesFromConstraintsWizard(Database database, String schemaName, String tableName) {
    this.database = database;
    this.schemaName = schemaName;
    this.tableName = tableName;
    initComponents();
    init();
  }
  
  private void init() {
    comboTables.setModel(new TableComboBoxModel(database));
    comboTablespace.setModel(new TablespaceComboBoxModel(database));
  }
  
  public void wizardShow() {
    ((TableComboBoxModel)comboTables.getModel()).change(schemaName);
    ((TableComboBoxModel)comboTables.getModel()).select(tableName, comboTables);
    ((TablespaceComboBoxModel)comboTablespace.getModel()).change();
  }
  
  public String getDialogTitle() {
    return stringManager.getString("CreateIndexesFromConstraintsWizard-dialog-title");
  }
  
  public String getTabTitle() {
    return stringManager.getString("CreateIndexesFromConstraintsWizard-tab-title");
  }
  
  public String getSqlCode() {
    return
      "begin\n" +
      "  for c in (select cc.owner, cc.constraint_name, cc.table_name, cc.column_name\n" +
      "              from ALL_IND_COLUMNS IC, ALL_CONS_COLUMNS CC, ALL_CONSTRAINTS C\n" +
      "             where cc.owner = '" +schemaName +"'\n" +
      "               and cc.table_name = '" +comboTables.getSelectedItem().toString() +"'\n" +
      "               and ic.index_owner(+) = cc.owner\n" +
      "               and ic.table_name(+) = cc.table_name\n" +
      "               and ic.column_name(+) = cc.column_name\n" +
      "               and c.owner = cc.owner\n" +
      "               and c.constraint_type = 'R'\n" +
      "               and c.constraint_name = cc.constraint_name\n" +
      "               and ic.index_name is null) loop\n" +
      "     begin\n" +
      "       execute immediate \n" +
      "         'CREATE INDEX '||substr(c.constraint_name, 1, 28)||'_I ON \"'||c.owner||'\".\"'||c.table_name||'\" ('||c.column_name||')" +
      (!checkDefaultTablespace.isSelected() ? (" TABLESPACE " +comboTablespace.getSelectedItem().toString()) : "") +"';\n" +
      "     exception\n" +
      "       when others then\n" +
      "         dbms_output.put_line(c.table_name||'.'||c.constraint_name||': '||SQLErrM(SQLCode));\n" +
      "     end;\n" +
      "   end loop;\n" +
      "end;";
  }
  
  public boolean execute() {
    try {
      database.executeCommand(getSqlCode());
      return true;
    } catch (Exception ex) {
      MessageBox.show(this, stringManager.getString("error"), ex.getMessage(), ModalResult.OK, MessageBox.ERROR);
      return false;
    }
  }
  
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jLabel2 = new javax.swing.JLabel();
    comboTables = new javax.swing.JComboBox();
    jLabel8 = new javax.swing.JLabel();
    comboTablespace = new javax.swing.JComboBox();
    checkDefaultTablespace = new javax.swing.JCheckBox();

    jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    jLabel2.setText(stringManager.getString("table-dd")); // NOI18N

    jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    jLabel8.setText(stringManager.getString("tablespace-dd")); // NOI18N

    checkDefaultTablespace.setSelected(true);
    checkDefaultTablespace.setText(stringManager.getString("default")); // NOI18N

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
          .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(comboTables, 0, 311, Short.MAX_VALUE)
          .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addComponent(comboTablespace, 0, 248, Short.MAX_VALUE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(checkDefaultTablespace)))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel2)
          .addComponent(comboTables, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel8)
          .addComponent(comboTablespace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(checkDefaultTablespace))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
  }// </editor-fold>//GEN-END:initComponents
  
  
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JCheckBox checkDefaultTablespace;
  private javax.swing.JComboBox comboTables;
  private javax.swing.JComboBox comboTablespace;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel8;
  // End of variables declaration//GEN-END:variables
  
}
