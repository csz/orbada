package pl.mpak.orbada.export.csv;

import java.io.File;
import java.nio.charset.Charset;
import javax.swing.JComponent;
import javax.swing.JTable;
import pl.mpak.orbada.plugins.ISettings;
import pl.mpak.sky.gui.mr.ModalResult;
import pl.mpak.sky.gui.swing.SwingUtil;
import pl.mpak.util.ExceptionUtil;
import pl.mpak.util.FileUtil;
import pl.mpak.util.StringManager;
import pl.mpak.util.StringManagerFactory;
import pl.mpak.util.files.FileExtensionFilter;
import pl.mpak.util.variant.Variant;

/**
 *
 * @author  proznicki
 */
public class ExportToCsvDialog extends javax.swing.JDialog {
  
  private StringManager stringManager = StringManagerFactory.getStringManager("export-csv");

  private ISettings config;
  private int modalResult = pl.mpak.sky.gui.mr.ModalResult.NONE;
  private JTable table;
  
  /** Creates new form ExportToDbfDialog
   * @param config
   */
  public ExportToCsvDialog(ISettings config, JTable table) {
    super(SwingUtil.getRootFrame());
    this.config = config;
    this.table = table;
    initComponents();
    init();
  }
  
  public static boolean showDialog(ISettings config, JTable table) {
    ExportToCsvDialog dialog = new ExportToCsvDialog(config, table);
    dialog.setVisible(true);
    return dialog.modalResult == ModalResult.OK;
  }
  
  private void init() {
    SwingUtil.centerWithinScreen(this);
    for (Charset charset : Charset.availableCharsets().values()) {
      comboCharset.addItem(charset.displayName());
    }
    getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(cmCancel.getShortCut(), "cmCancel");
    getRootPane().getActionMap().put("cmCancel", cmCancel);
    getRootPane().setDefaultButton(buttonOk);
    configToDialog();
  }
  
  private void configToDialog() {
    try {
      textNullDataValue.setText(config.getValue("null-data-value", ""));
      comboCharset.setSelectedItem(config.getValue("charset", Charset.defaultCharset().displayName()));
      comboDelimiter.setText(config.getValue("field-delimiter", ","));
      checkColumnNames.setSelected(config.getValue("column-names", true));
      comboTextQualifier.setSelectedItem(config.getValue("text-qualifier", "\""));
      checkForceTextQualifier.setSelected(config.getValue("force-text-qualifier", false));
      comboEscapeMode.setSelectedItem(config.getValue("escape-mode", "BACKSLASH"));
      comboEndOfLineChar.setSelectedItem(config.getValue("end-of-line-char", "\\n"));
    } catch (Exception ex) {
      ExceptionUtil.processException(ex);
    }
  }
  
  private void dialogToConfig() {
    config.setValue("null-data-value", textNullDataValue.getText());
    config.setValue("charset", new Variant(comboCharset.getSelectedItem().toString()));
    config.setValue("field-delimiter", comboDelimiter.getText());
    config.setValue("column-names", checkColumnNames.isSelected());
    config.setValue("text-qualifier", comboTextQualifier.getText());
    config.setValue("force-text-qualifier", checkForceTextQualifier.isSelected());
    config.setValue("escape-mode", comboEscapeMode.getText());
    config.setValue("end-of-line-char", comboEndOfLineChar.getText());
    config.store();
  }
  
  private boolean selectFile() {
    File lastFile = null;
    try {
      if (!config.getValue("file-name").getString().equals("")) {
        lastFile = new File(config.getValue("file-name").getString());
      }
    } catch (Exception ex) {
    }
    lastFile = FileUtil.selectFileToSave(this, null, null, lastFile, new FileExtensionFilter[] {new FileExtensionFilter(stringManager.getString("ExportToCsvDialog-csv-files"), new String[] {".csv"})});
    if (lastFile != null) {
      config.setValue("file-name", new Variant(lastFile.getAbsoluteFile()));
      return true;
    }
    return false;
  }
  
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmOk = new pl.mpak.sky.gui.swing.Action();
        cmCancel = new pl.mpak.sky.gui.swing.Action();
        buttonOk = new javax.swing.JButton();
        buttonCancel = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        comboCharset = new javax.swing.JComboBox();
        jLabel17 = new javax.swing.JLabel();
        textNullDataValue = new pl.mpak.sky.gui.swing.comp.TextField();
        jLabel18 = new javax.swing.JLabel();
        comboDelimiter = new pl.mpak.sky.gui.swing.comp.ComboBox();
        checkColumnNames = new javax.swing.JCheckBox();
        jLabel19 = new javax.swing.JLabel();
        comboTextQualifier = new pl.mpak.sky.gui.swing.comp.ComboBox();
        checkForceTextQualifier = new javax.swing.JCheckBox();
        jLabel20 = new javax.swing.JLabel();
        comboEscapeMode = new pl.mpak.sky.gui.swing.comp.ComboBox();
        jLabel21 = new javax.swing.JLabel();
        comboEndOfLineChar = new pl.mpak.sky.gui.swing.comp.ComboBox();

        cmOk.setShortCut(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ENTER, 0));
        cmOk.setText(stringManager.getString("cmOk-text")); // NOI18N
        cmOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmOkActionPerformed(evt);
            }
        });

        cmCancel.setShortCut(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0));
        cmCancel.setText(stringManager.getString("cmCancel-text")); // NOI18N
        cmCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmCancelActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(stringManager.getString("ExportToCsvDialog-title")); // NOI18N
        setModal(true);

        buttonOk.setAction(cmOk);
        buttonOk.setPreferredSize(new java.awt.Dimension(75, 23));

        buttonCancel.setAction(cmCancel);
        buttonCancel.setPreferredSize(new java.awt.Dimension(75, 23));

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText(stringManager.getString("ExportToCsvDialog-charset-dd")); // NOI18N

        comboCharset.setEditable(true);
        comboCharset.setFont(new java.awt.Font("Courier New", 0, 12));

        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel17.setText(stringManager.getString("ExportToCsvDialog-empty-value-dd")); // NOI18N

        textNullDataValue.setFont(new java.awt.Font("Courier New", 0, 12));

        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel18.setText(stringManager.getString("ExportToCsvDialog-separator-dd")); // NOI18N

        comboDelimiter.setEditable(true);
        comboDelimiter.setModel(new javax.swing.DefaultComboBoxModel(new String[] { ",", ";", "|", "TAB", "SPACE" }));

        checkColumnNames.setText(stringManager.getString("ExportToCsvDialog-checkColumnNames-text")); // NOI18N

        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel19.setText(stringManager.getString("ExportToCsvDialog-text-qualifier-dd")); // NOI18N

        comboTextQualifier.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "\"", "'", "`" }));

        checkForceTextQualifier.setText(stringManager.getString("ExportToCsvDialog-force-text-qualifier")); // NOI18N

        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel20.setText(stringManager.getString("ExportToCsvDialog-escape-mode-dd")); // NOI18N

        comboEscapeMode.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "BACKSLASH", "DOUBLED" }));

        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel21.setText(stringManager.getString("ExportToCsvDialog-end-of-line-char-dd")); // NOI18N

        comboEndOfLineChar.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "\\n", "\\r", "\\f" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER, false)
                            .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboCharset, 0, 226, Short.MAX_VALUE)
                            .addComponent(textNullDataValue, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
                            .addComponent(checkColumnNames)
                            .addComponent(comboDelimiter, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
                            .addComponent(comboTextQualifier, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
                            .addComponent(checkForceTextQualifier))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(buttonOk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboEscapeMode, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboEndOfLineChar, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboCharset, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textNullDataValue, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboDelimiter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkColumnNames)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(comboTextQualifier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkForceTextQualifier)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(comboEscapeMode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboEndOfLineChar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonOk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
  
private void cmCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmCancelActionPerformed
  modalResult = pl.mpak.sky.gui.mr.ModalResult.CANCEL;
  dispose();
}//GEN-LAST:event_cmCancelActionPerformed

private void cmOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmOkActionPerformed
  if (selectFile()) {
    modalResult = pl.mpak.sky.gui.mr.ModalResult.OK;
    dialogToConfig();
    dispose();
  }
}//GEN-LAST:event_cmOkActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCancel;
    private javax.swing.JButton buttonOk;
    private javax.swing.JCheckBox checkColumnNames;
    private javax.swing.JCheckBox checkForceTextQualifier;
    private pl.mpak.sky.gui.swing.Action cmCancel;
    private pl.mpak.sky.gui.swing.Action cmOk;
    private javax.swing.JComboBox comboCharset;
    private pl.mpak.sky.gui.swing.comp.ComboBox comboDelimiter;
    private pl.mpak.sky.gui.swing.comp.ComboBox comboEndOfLineChar;
    private pl.mpak.sky.gui.swing.comp.ComboBox comboEscapeMode;
    private pl.mpak.sky.gui.swing.comp.ComboBox comboTextQualifier;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel7;
    private pl.mpak.sky.gui.swing.comp.TextField textNullDataValue;
    // End of variables declaration//GEN-END:variables
  
}
