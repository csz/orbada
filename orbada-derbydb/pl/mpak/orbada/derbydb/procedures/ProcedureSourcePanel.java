package pl.mpak.orbada.derbydb.procedures;

import java.io.IOException;
import pl.mpak.orbada.derbydb.DerbyDbSql;
import pl.mpak.orbada.derbydb.OrbadaDerbyDbPlugin;
import pl.mpak.orbada.gui.ITabObjectInfo;
import pl.mpak.orbada.gui.cm.ComponentActionsAction;
import pl.mpak.orbada.plugins.IViewAccesibilities;
import pl.mpak.usedb.core.Database;
import pl.mpak.usedb.core.Query;
import pl.mpak.util.ExceptionUtil;
import pl.mpak.util.StringManager;
import pl.mpak.util.StringManagerFactory;
import pl.mpak.util.timer.Timer;

/**
 *
 * @author  akaluza
 */
public class ProcedureSourcePanel extends javax.swing.JPanel implements ITabObjectInfo {
  
  private final static StringManager stringManager = StringManagerFactory.getStringManager(OrbadaDerbyDbPlugin.class);

  private IViewAccesibilities accesibilities;
  private String currentSchemaName = "";
  private String currentProcName = "";
  private boolean requestRefresh = false;

  private Timer timer;
  
  /** Creates new form ProcedureSourcePanel 
   * @param accesibilities 
   */
  public ProcedureSourcePanel(IViewAccesibilities accesibilities) {
    this.accesibilities = accesibilities;
    initComponents();
    init();
  }
  
  private void setEditorText(final String text) {
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        syntaxProcSource.setText(text);
        syntaxProcSource.getEditorArea().setCaretPosition(0);
      }
    });
  }
  
  private void init() {
    timer = new Timer(250) {
      {
        setEnabled(false);
      }
      public void run() {
        setEnabled(false);
        requestRefresh = false;
        Query query = getDatabase().createQuery();
        try {
          query.setSqlText(DerbyDbSql.getProcedureSource());
          query.paramByName("schemaname").setString(currentSchemaName);
          query.paramByName("procname").setString(currentProcName);
          query.open();
          if (!query.eof()) {
            setEditorText(query.fieldByName("source").getString());
          }
          else {
            setEditorText("");
          }
        } catch (Exception ex) {
          ExceptionUtil.processException(ex);
        }


        finally {
          query.close();
        }
      }
    };
    syntaxProcSource.setDatabase(getDatabase());
    OrbadaDerbyDbPlugin.getRefreshQueue().add(timer);
    new ComponentActionsAction(getDatabase(), syntaxProcSource.getEditorArea(), buttonActions, menuActions, "derbydb-object-source-actions");
  }
  
  public Database getDatabase() {
    return accesibilities.getDatabase();
  }
  
  public String getTitle() {
    return stringManager.getString("ProcedureSourcePanel-title");
  }
  
  public void refresh() {
    refresh(null, currentSchemaName, currentProcName);
  }
  
  public void refresh(String catalogName, String schemaName, String objectName) {
    if (!currentSchemaName.equals(schemaName) || !currentProcName.equals(objectName) || requestRefresh) {
      currentSchemaName = schemaName;
      currentProcName = objectName;
      if (isVisible()) {
        timer.restart();
      }
      else {
        requestRefresh = true;
        setEditorText("");
      }
    }
  }
  
  @Override
  public boolean canClose() {
    return true;
  }

  public void close() throws IOException {
    timer.cancel();
    syntaxProcSource.setDatabase(null);
    accesibilities = null;
  }
  
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    cmRefresh = new pl.mpak.sky.gui.swing.Action();
    menuActions = new javax.swing.JPopupMenu();
    toolBarContent = new javax.swing.JToolBar();
    buttonRefresh = new pl.mpak.sky.gui.swing.comp.ToolButton();
    jSeparator1 = new javax.swing.JToolBar.Separator();
    buttonActions = new pl.mpak.sky.gui.swing.comp.ToolButton();
    syntaxProcSource = new pl.mpak.orbada.gui.comps.OrbadaSyntaxTextArea();

    cmRefresh.setSmallIcon(pl.mpak.sky.gui.swing.ImageManager.getImage("/pl/mpak/res/icons/refresh16.gif")); // NOI18N
    cmRefresh.setText(stringManager.getString("cmRefresh-text")); // NOI18N
    cmRefresh.setTooltip(stringManager.getString("ProcedureSourcePanel-cmRefresh-hint")); // NOI18N
    cmRefresh.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        cmRefreshActionPerformed(evt);
      }
    });

    addComponentListener(new java.awt.event.ComponentAdapter() {
      public void componentShown(java.awt.event.ComponentEvent evt) {
        formComponentShown(evt);
      }
    });
    setLayout(new java.awt.BorderLayout());

    toolBarContent.setFloatable(false);
    toolBarContent.setRollover(true);

    buttonRefresh.setAction(cmRefresh);
    buttonRefresh.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    buttonRefresh.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    toolBarContent.add(buttonRefresh);
    toolBarContent.add(jSeparator1);

    buttonActions.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    buttonActions.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    toolBarContent.add(buttonActions);

    add(toolBarContent, java.awt.BorderLayout.PAGE_START);
    add(syntaxProcSource, java.awt.BorderLayout.CENTER);
  }// </editor-fold>//GEN-END:initComponents

private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
  refresh(null, currentSchemaName, currentProcName);
}//GEN-LAST:event_formComponentShown

private void cmRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmRefreshActionPerformed
  timer.restart();
}//GEN-LAST:event_cmRefreshActionPerformed
  
  
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private pl.mpak.sky.gui.swing.comp.ToolButton buttonActions;
  private pl.mpak.sky.gui.swing.comp.ToolButton buttonRefresh;
  private pl.mpak.sky.gui.swing.Action cmRefresh;
  private javax.swing.JToolBar.Separator jSeparator1;
  private javax.swing.JPopupMenu menuActions;
  private pl.mpak.orbada.gui.comps.OrbadaSyntaxTextArea syntaxProcSource;
  private javax.swing.JToolBar toolBarContent;
  // End of variables declaration//GEN-END:variables
  
}
