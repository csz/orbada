package pl.mpak.orbada.firebird.gui.tables;

import java.io.IOException;

import orbada.gui.comps.OrbadaSyntaxTextArea;
import pl.mpak.orbada.firebird.OrbadaFirebirdPlugin;
import pl.mpak.orbada.firebird.util.SourceCreator;
import pl.mpak.orbada.plugins.IViewAccesibilities;
import orbada.gui.ITabObjectInfo;
import pl.mpak.usedb.core.Database;
import pl.mpak.util.StringManager;
import pl.mpak.util.StringManagerFactory;

/**
 *
 * @author  akaluza
 */
public class TableSourcePanel extends javax.swing.JPanel implements ITabObjectInfo {
  
  private StringManager stringManager = StringManagerFactory.getStringManager(OrbadaFirebirdPlugin.class);

  private IViewAccesibilities accesibilities;
  private String currentObjectName = "";
  private boolean requestRefresh = false;
  private boolean closing = false;
  
  /** Creates new form ViewSourcePanel
   * @param accesibilities
   */
  public TableSourcePanel(IViewAccesibilities accesibilities) {
    this.accesibilities = accesibilities;
    initComponents();
    init();
  }
  
  private void setEditorText(final String objectName, final String text) {
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        syntaxSource.setDatabaseObject(null, "TABLE", objectName, text);
        syntaxSource.getEditorArea().setCaretPosition(0);
      }
    });
  }
  
  private void init() {
    syntaxSource.getStatusBar().addPanel("ddl-status").setText(" ");
    syntaxSource.setDatabase(getDatabase());
  }
  
  public String getObjectName() {
    return syntaxSource.getObjectName();
  }

  public Database getDatabase() {
    return accesibilities.getDatabase();
  }
  
  public String getTitle() {
    return stringManager.getString("TableSourcePanel-title");
  }
  
  private void refreshTask() {
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        refresh();
      }
    });
  }
  
  public void refresh() {
    requestRefresh = false;
    new SourceCreator(getDatabase(), syntaxSource).getSource(null, "TABLE", currentObjectName);
    syntaxSource.getStatusBar().getPanel("ddl-status").setText(" " +currentObjectName);
  }
  
  public void refresh(String catalogName, String schemaName, String objectName) {
    if (!currentObjectName.equals(objectName) || requestRefresh) {
      currentObjectName = objectName;
      if (isVisible()) {
        refresh();
      } else {
        requestRefresh = true;
        setEditorText(null, "");
      }
    }
  }
  
  @Override
  public boolean canClose() {
    return syntaxSource.canClose();
  }

  public void close() throws IOException {
    closing = true;
    syntaxSource.setDatabase(null);
    accesibilities = null;
  }
  
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    cmRefresh = new pl.mpak.sky.gui.swing.Action();
    jPanel1 = new javax.swing.JPanel();
    toolBarContent = new javax.swing.JToolBar();
    buttonRefresh = new pl.mpak.sky.gui.swing.comp.ToolButton();
    syntaxSource = new OrbadaSyntaxTextArea();

    cmRefresh.setSmallIcon(pl.mpak.sky.gui.swing.ImageManager.getImage("/pl/mpak/res/icons/refresh16.gif")); // NOI18N
    cmRefresh.setText(stringManager.getString("cmRefresh-text")); // NOI18N
    cmRefresh.setTooltip(stringManager.getString("ViewSourcePanel-cmRefresh-hint")); // NOI18N
    cmRefresh.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        cmRefreshActionPerformed(evt);
      }
    });

    addComponentListener(new java.awt.event.ComponentAdapter() {
      public void componentShown(java.awt.event.ComponentEvent evt) {
        formComponentShown(evt);
      }
    });
    setLayout(new java.awt.BorderLayout());

    jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 0));

    toolBarContent.setFloatable(false);
    toolBarContent.setRollover(true);

    buttonRefresh.setAction(cmRefresh);
    buttonRefresh.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    buttonRefresh.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    toolBarContent.add(buttonRefresh);

    jPanel1.add(toolBarContent);

    add(jPanel1, java.awt.BorderLayout.NORTH);
    add(syntaxSource, java.awt.BorderLayout.CENTER);
  }// </editor-fold>//GEN-END:initComponents
  
private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
  if (requestRefresh && !closing) {
    refreshTask();
  }
}//GEN-LAST:event_formComponentShown

private void cmRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmRefreshActionPerformed
  refresh();
}//GEN-LAST:event_cmRefreshActionPerformed


  // Variables declaration - do not modify//GEN-BEGIN:variables
  private pl.mpak.sky.gui.swing.comp.ToolButton buttonRefresh;
  private pl.mpak.sky.gui.swing.Action cmRefresh;
  private javax.swing.JPanel jPanel1;
  private OrbadaSyntaxTextArea syntaxSource;
  private javax.swing.JToolBar toolBarContent;
  // End of variables declaration//GEN-END:variables
  
}
