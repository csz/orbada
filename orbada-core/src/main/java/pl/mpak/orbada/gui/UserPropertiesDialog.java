/*
 * UserPropertiesDialog.java
 *
 * Created on 9 styczeñ 2008, 18:00
 */

package pl.mpak.orbada.gui;

import java.beans.IntrospectionException;
import javax.swing.AbstractButton;
import javax.swing.JComponent;

import pl.mpak.orbada.Consts;
import pl.mpak.orbada.core.Application;
import pl.mpak.orbada.core.Application;
import pl.mpak.sky.gui.mr.ModalResult;
import pl.mpak.sky.gui.swing.MessageBox;
import pl.mpak.sky.gui.swing.SwingUtil;
import pl.mpak.usedb.UseDBException;
import pl.mpak.usedb.gui.RecordLink;
import pl.mpak.util.ExceptionUtil;
import pl.mpak.util.StringManager;
import pl.mpak.util.StringManagerFactory;
import pl.mpak.util.timer.Timer;

/**
 *
 * @author  akaluza
 */
public class UserPropertiesDialog extends javax.swing.JDialog {
  
  private final static StringManager stringManager = StringManagerFactory.getStringManager("orbada");

  private int modalResult = ModalResult.NONE;
  private RecordLink userLink;
  private Timer timerRegisterOrbada;

  /** Creates new form UserPropertiesDialog */
  public UserPropertiesDialog() throws IntrospectionException, UseDBException {
    super(SwingUtil.getRootFrame());
    initComponents();
    init();
  }

  public static void showDialog() {
    java.awt.EventQueue.invokeLater(new Runnable() {
      @Override
      public void run() {
        try {
          UserPropertiesDialog dialog = new UserPropertiesDialog();
          dialog.setVisible(true);
        } catch (Exception ex) {
          ExceptionUtil.processException(ex);
          MessageBox.show(null, stringManager.getString("error"), ex.getMessage(), ModalResult.OK, MessageBox.ERROR);
        }
      }
    });
  }

  private void init() throws IntrospectionException, UseDBException {
    textUserName.setEditable(Application.get().isUserAdmin());
    
    userLink = new RecordLink();
    userLink.add("USR_ID", textUserId);
    userLink.add("USR_NAME", textUserName);
    userLink.add("USR_DESCRIPTION", textUserDescription);

    buttonRegisterOrbada.setVisible(false);
    cmRegisterOrbada.setEnabled(false);
//    if (!Application.get().getUser().isRegistered()) {
//      timerRegisterOrbada = new Timer(1000) {
//        @Override
//        public void run() {
//          setEnabled(false);
//          Content content;
//          try {
//            updateRecord();
//            content = Application.get().getWebAppAccessibilities().getUserRegistered();
//          } catch (Exception ex) {
//            ExceptionUtil.processException(ex);
//            return;
//          }
//          if (content != null) {
//            if (content.haveErrors()) {
//              MessageBox.show(UserPropertiesDialog.this, "B³¹d", "<html>" +content.getMessagesAsHtml(), ModalResult.OK, MessageBox.ERROR);
//              return;
//            }
//            else if (!content.isOrbadaRegistered()) {
//              cmRegisterOrbada.setEnabled(true);
//              setInterval(10000);
//              setEnabled(true);
//            }
//            else if (!Application.get().getUser().isRegistered()) {
//              Application.get().getUser().setRegistered(true);
//              try {
//                Application.get().getUser().applyUpdate();
//              } catch (Exception ex) {
//                ExceptionUtil.processException(ex);
//              }
//              cmRegisterOrbada.setEnabled(false);
//            }
//          }
//        }
//      };
//      TimerManager.getGlobal().add(timerRegisterOrbada);
//    }

    userLink.updateComponents(Application.get().getUser());

    SwingUtil.setButtonSizesTheSame(new AbstractButton[] {buttonRegisterOrbada});
    SwingUtil.setButtonSizesTheSame(new AbstractButton[] {buttonOk, buttonCancel});

    getRootPane().setDefaultButton(buttonOk);
    getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(cmCancel.getShortCut(), "cmCancel");
    getRootPane().getActionMap().put("cmCancel", cmCancel);
    SwingUtil.centerWithinScreen(this);
  }
  
  @Override
  public void dispose() {
    if (timerRegisterOrbada != null) {
      timerRegisterOrbada.cancel();
    }
    super.dispose();
  }
  
  private void updateRecord() throws Exception {
    userLink.updateRecord(Application.get().getUser());
    Application.get().getUser().applyUpdate();
  }
  
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    cmOk = new pl.mpak.sky.gui.swing.Action();
    cmCancel = new pl.mpak.sky.gui.swing.Action();
    cmRegisterOrbada = new pl.mpak.sky.gui.swing.Action();
    buttonOk = new javax.swing.JButton();
    buttonCancel = new javax.swing.JButton();
    jLabel1 = new javax.swing.JLabel();
    textUserName = new pl.mpak.sky.gui.swing.comp.TextField();
    jLabel3 = new javax.swing.JLabel();
    textUserId = new pl.mpak.sky.gui.swing.comp.TextField();
    buttonRegisterOrbada = new javax.swing.JButton();
    jLabel2 = new javax.swing.JLabel();
    textUserDescription = new pl.mpak.sky.gui.swing.comp.TextField();

    cmOk.setShortCut(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ENTER, 0));
    cmOk.setText(stringManager.getString("cmOk-text")); // NOI18N
    cmOk.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        cmOkActionPerformed(evt);
      }
    });

    cmCancel.setShortCut(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0));
    cmCancel.setText(stringManager.getString("cmCancel-text")); // NOI18N
    cmCancel.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        cmCancelActionPerformed(evt);
      }
    });

    cmRegisterOrbada.setActionCommandKey("cmRegisterOrbada");
    cmRegisterOrbada.setText(stringManager.getString("UserPropertiesDialog-cmRegisterOrbada-text")); // NOI18N
    cmRegisterOrbada.setTooltip(stringManager.getString("UserPropertiesDialog-cmRegisterOrbada-hint")); // NOI18N
    cmRegisterOrbada.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        cmRegisterOrbadaActionPerformed(evt);
      }
    });

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    setTitle(stringManager.getString("UserPropertiesDialog-title")); // NOI18N
    setModal(true);

    buttonOk.setAction(cmOk);
    buttonOk.setMargin(new java.awt.Insets(2, 2, 2, 2));
    buttonOk.setMinimumSize(new java.awt.Dimension(75, 23));
    buttonOk.setPreferredSize(new java.awt.Dimension(85, 25));

    buttonCancel.setAction(cmCancel);
    buttonCancel.setMargin(new java.awt.Insets(2, 2, 2, 2));
    buttonCancel.setPreferredSize(new java.awt.Dimension(85, 25));

    jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    jLabel1.setText(stringManager.getString("UserPropertiesDialog-email-addr-dd")); // NOI18N

    jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    jLabel3.setText(stringManager.getString("UserPropertiesDialog-user-id-dd")); // NOI18N

    textUserId.setEditable(false);

    buttonRegisterOrbada.setAction(cmRegisterOrbada);
    buttonRegisterOrbada.setMargin(new java.awt.Insets(2, 2, 2, 2));
    buttonRegisterOrbada.setPreferredSize(new java.awt.Dimension(85, 25));

    jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    jLabel2.setText(stringManager.getString("UserPropertiesDialog-description-dd")); // NOI18N

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(textUserName, javax.swing.GroupLayout.DEFAULT_SIZE, 319, Short.MAX_VALUE))
          .addGroup(layout.createSequentialGroup()
            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(textUserId, javax.swing.GroupLayout.DEFAULT_SIZE, 319, Short.MAX_VALUE))
          .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addComponent(buttonRegisterOrbada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 185, Short.MAX_VALUE)
            .addComponent(buttonOk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(buttonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addGroup(layout.createSequentialGroup()
            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(textUserDescription, javax.swing.GroupLayout.DEFAULT_SIZE, 319, Short.MAX_VALUE)))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel3)
          .addComponent(textUserId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel1)
          .addComponent(textUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel2)
          .addComponent(textUserDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(buttonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(buttonOk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(buttonRegisterOrbada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addContainerGap())
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void cmOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmOkActionPerformed
    try {
      updateRecord();
      modalResult = ModalResult.OK;
      dispose();
    } catch (Exception ex) {
      MessageBox.show(this, stringManager.getString("error"), ex.getMessage(), ModalResult.OK, MessageBox.ERROR);
    }
  }//GEN-LAST:event_cmOkActionPerformed

  private void cmCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmCancelActionPerformed
    modalResult = ModalResult.CANCEL;
    dispose();
  }//GEN-LAST:event_cmCancelActionPerformed

private void cmRegisterOrbadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmRegisterOrbadaActionPerformed
//  try {
//    updateRecord();
//    URI url =
//      Application.get().getWebAppAccessibilities().getWebPageUri(
//      "/www_orbada.login_form" +
//      "?ausername=" + Application.get().getUserName() +
//      "&aorbadausrid=" + Application.get().getUserId() +
//      "&aorbadaid=" + Application.get().getOrbadaString("unique-id"));
//    if (Desktop.isDesktopSupported()) {
//      Desktop.getDesktop().browse(url);
//    }
//    else {
//      TextTransfer transfer = new TextTransfer();
//      transfer.setClipboardContents(url.toString());
//      MessageBox.show(this,
//        stringManager.getString("error"),
//        stringManager.getString("UserPropertiesDialog-os-not-support-default-browser"),
//        ModalResult.OK, MessageBox.ERROR);
//    }
//  } catch (Exception ex) {
//    ExceptionUtil.processException(ex);
//  }
}//GEN-LAST:event_cmRegisterOrbadaActionPerformed
  
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton buttonCancel;
  private javax.swing.JButton buttonOk;
  private javax.swing.JButton buttonRegisterOrbada;
  private pl.mpak.sky.gui.swing.Action cmCancel;
  private pl.mpak.sky.gui.swing.Action cmOk;
  private pl.mpak.sky.gui.swing.Action cmRegisterOrbada;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private pl.mpak.sky.gui.swing.comp.TextField textUserDescription;
  private pl.mpak.sky.gui.swing.comp.TextField textUserId;
  private pl.mpak.sky.gui.swing.comp.TextField textUserName;
  // End of variables declaration//GEN-END:variables
  
}
