/*
 * GadgetPanel.java
 *
 * Created on 12 wrzesieñ 2008, 18:14
 */

package pl.mpak.orbada.gui.gadgets;

import java.awt.Component;
import java.awt.Dimension;
import java.io.Closeable;
import java.io.IOException;

import pl.mpak.orbada.Consts;
import pl.mpak.orbada.gui.GadgetAccesibilities;
import pl.mpak.orbada.gui.PerspectivePanel;
import pl.mpak.orbada.Consts;
import pl.mpak.orbada.gui.GadgetAccesibilities;
import pl.mpak.orbada.gui.PerspectivePanel;
import pl.mpak.orbada.plugins.providers.PerpectiveGadgetProvider;
import pl.mpak.sky.gui.swing.SwingUtil;
import pl.mpak.util.Configurable;
import pl.mpak.util.StringManager;
import pl.mpak.util.StringManagerFactory;
import pl.mpak.util.Titleable;

/**
 *
 * @author  akaluza
 */
public class GadgetPanel extends javax.swing.JPanel implements Closeable {

  private final static StringManager stringManager = StringManagerFactory.getStringManager("orbada");

  private int lastHeight;
  private PerspectivePanel perspectivePanel;
  private PerpectiveGadgetProvider provider;
  private GadgetAccesibilities accesibilities;
  private Component gadgetComponent;
  private int initialHeight;
  
  public GadgetPanel(PerspectivePanel perspectivePanel, PerpectiveGadgetProvider provider, int initialHeight) {
    this.perspectivePanel = perspectivePanel;
    this.provider = provider;
    this.initialHeight = initialHeight;
    accesibilities = new GadgetAccesibilities(perspectivePanel) {
      public void updated() {
        gadgetUpdated();
      }
    };
    initComponents();
    init();
  }

  private void init() {
    setMinimumSize(new Dimension(0, 100));
    SwingUtil.addAction(panelGadget, cmClose);
    SwingUtil.addAction(panelGadget, cmMinimize);
    SwingUtil.addAction(panelGadget, cmConfig);
    //setPreferredSize(new Dimension(150, initialHeight <= 0 ? 100 : initialHeight));
    panelGadget.add(gadgetComponent = provider.createGadget(accesibilities));
    gadgetUpdated();
  }

  private void gadgetUpdated() {
    if (gadgetComponent instanceof Titleable) {
      labelTitle.setText("<html>" +((Titleable)gadgetComponent).getTitle());
    }
    else {
      labelTitle.setText("<html>" +provider.getPublicName());
    }
    if (gadgetComponent instanceof Configurable) {
      cmConfig.setEnabled(((Configurable)gadgetComponent).isConfig());
    }
    else {
      cmConfig.setEnabled(false);
    }
    labelTitle.setIcon(provider.getIcon());
  }
      
  public void close() throws IOException {
    if (gadgetComponent instanceof Closeable) {
      ((Closeable)gadgetComponent).close();
    }
    accesibilities.close();
  }

  public PerpectiveGadgetProvider getProvider() {
    return provider;
  }
  
  public boolean isMinimized() {
    return !gadgetComponent.isVisible();
  }
  
  public void setMinimized(boolean value) {
    if (value) {
      lastHeight = getHeight();
      panelGadget.setVisible(false);
      setPreferredSize(new Dimension(0, panelTitle.getHeight()));
    }
    else {
      if (lastHeight == 0) {
        lastHeight = getPreferredSize().height;
      }
      setPreferredSize(new Dimension(0, lastHeight));
      panelGadget.setVisible(true);
    }
    if (getParent() != null) {
      getParent().validate();
    }
  }

  public int getInitialHeight() {
    return initialHeight;
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    cmClose = new pl.mpak.sky.gui.swing.Action();
    cmMinimize = new pl.mpak.sky.gui.swing.Action();
    cmConfig = new pl.mpak.sky.gui.swing.Action();
    panelTitle = new javax.swing.JPanel();
    panelButtons = new javax.swing.JPanel();
    buttonConfig = new pl.mpak.sky.gui.swing.comp.ToolButton();
    buttonMinimize = new pl.mpak.sky.gui.swing.comp.ToolButton();
    buttonClose = new pl.mpak.sky.gui.swing.comp.ToolButton();
    panelLabel = new javax.swing.JPanel();
    labelTitle = new javax.swing.JLabel();
    panelFillWest = new javax.swing.JPanel();
    panelGadget = new javax.swing.JPanel();

    cmClose.setActionCommandKey("cmClose");
    cmClose.setShortCut(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.CTRL_MASK));
    cmClose.setSmallIcon(pl.mpak.sky.gui.swing.ImageManager.getImage("/res/icons/stop10.gif")); // NOI18N
    cmClose.setText(stringManager.getString("cmClose-text")); // NOI18N
    cmClose.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        cmCloseActionPerformed(evt);
      }
    });

    cmMinimize.setActionCommandKey("cmMinimize");
    cmMinimize.setEnabled(false);
    cmMinimize.setShortCut(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
    cmMinimize.setSmallIcon(pl.mpak.sky.gui.swing.ImageManager.getImage("/res/icons/minimize10.gif")); // NOI18N
    cmMinimize.setText(stringManager.getString("cmMinimize-text")); // NOI18N
    cmMinimize.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        cmMinimizeActionPerformed(evt);
      }
    });

    cmConfig.setActionCommandKey("cmConfig");
    cmConfig.setShortCut(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
    cmConfig.setSmallIcon(pl.mpak.sky.gui.swing.ImageManager.getImage("/res/icons/config10.gif")); // NOI18N
    cmConfig.setText(stringManager.getString("GadgetPanel-cmConfig-text")); // NOI18N
    cmConfig.setTooltip(stringManager.getString("GadgetPanel-cmConfig-hint")); // NOI18N
    cmConfig.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        cmConfigActionPerformed(evt);
      }
    });

    setLayout(new java.awt.BorderLayout());

    panelTitle.setBackground(javax.swing.UIManager.getDefaults().getColor("textHighlight"));
    panelTitle.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    panelTitle.setLayout(new java.awt.BorderLayout());

    panelButtons.setOpaque(false);
    panelButtons.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 2, 2));

    buttonConfig.setAction(cmConfig);
    buttonConfig.setPreferredSize(new java.awt.Dimension(16, 16));
    panelButtons.add(buttonConfig);

    buttonMinimize.setAction(cmMinimize);
    buttonMinimize.setPreferredSize(new java.awt.Dimension(16, 16));
    panelButtons.add(buttonMinimize);

    buttonClose.setAction(cmClose);
    buttonClose.setPreferredSize(new java.awt.Dimension(16, 16));
    panelButtons.add(buttonClose);

    panelTitle.add(panelButtons, java.awt.BorderLayout.EAST);

    panelLabel.setOpaque(false);
    panelLabel.setLayout(new java.awt.BorderLayout(2, 0));

    labelTitle.setForeground(javax.swing.UIManager.getDefaults().getColor("TextArea.background"));
    labelTitle.setText(stringManager.getString("GadgetPanel-labelTitle-text")); // NOI18N
    panelLabel.add(labelTitle, java.awt.BorderLayout.CENTER);

    panelTitle.add(panelLabel, java.awt.BorderLayout.CENTER);

    panelFillWest.setOpaque(false);
    panelFillWest.setPreferredSize(new java.awt.Dimension(5, 0));
    panelFillWest.setLayout(new java.awt.BorderLayout());
    panelTitle.add(panelFillWest, java.awt.BorderLayout.WEST);

    add(panelTitle, java.awt.BorderLayout.PAGE_START);

    panelGadget.setLayout(new java.awt.BorderLayout());
    add(panelGadget, java.awt.BorderLayout.CENTER);
  }// </editor-fold>//GEN-END:initComponents

private void cmMinimizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmMinimizeActionPerformed
  setMinimized(panelGadget.isVisible());
  if (getParent() != null) {
    getParent().validate();
  }  
}//GEN-LAST:event_cmMinimizeActionPerformed

private void cmCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmCloseActionPerformed
  perspectivePanel.closeGadget(this);
}//GEN-LAST:event_cmCloseActionPerformed

private void cmConfigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmConfigActionPerformed
  if (gadgetComponent instanceof Configurable) {
    if (((Configurable)gadgetComponent).configure()) {
      accesibilities.updated();
    }
  }
}//GEN-LAST:event_cmConfigActionPerformed


  // Variables declaration - do not modify//GEN-BEGIN:variables
  private pl.mpak.sky.gui.swing.comp.ToolButton buttonClose;
  private pl.mpak.sky.gui.swing.comp.ToolButton buttonConfig;
  private pl.mpak.sky.gui.swing.comp.ToolButton buttonMinimize;
  private pl.mpak.sky.gui.swing.Action cmClose;
  private pl.mpak.sky.gui.swing.Action cmConfig;
  private pl.mpak.sky.gui.swing.Action cmMinimize;
  private javax.swing.JLabel labelTitle;
  private javax.swing.JPanel panelButtons;
  private javax.swing.JPanel panelFillWest;
  private javax.swing.JPanel panelGadget;
  private javax.swing.JPanel panelLabel;
  private javax.swing.JPanel panelTitle;
  // End of variables declaration//GEN-END:variables

}
