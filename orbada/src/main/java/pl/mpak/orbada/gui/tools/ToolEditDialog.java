/*
 * DriverEditDialog.java
 *
 * Created on 11 paüdziernik 2007, 22:33
 */

package pl.mpak.orbada.gui.tools;

import java.beans.IntrospectionException;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import javax.swing.ImageIcon;
import javax.swing.JComponent;

import pl.mpak.orbada.Consts;
import pl.mpak.orbada.core.Application;
import pl.mpak.orbada.gui.comps.OrbadaJavaSyntaxTextArea;
import pl.mpak.orbada.db.InternalDatabase;
import pl.mpak.orbada.db.InternalDatabase;
import pl.mpak.orbada.db.Tool;
import pl.mpak.sky.gui.mr.ModalResult;
import pl.mpak.sky.gui.swing.MessageBox;
import pl.mpak.sky.gui.swing.SwingUtil;
import pl.mpak.usedb.UseDBException;
import pl.mpak.usedb.gui.FieldLinkType;
import pl.mpak.usedb.gui.RecordLink;
import pl.mpak.util.ExceptionUtil;
import pl.mpak.util.FileUtil;
import pl.mpak.util.StreamUtil;
import pl.mpak.util.StringManager;
import pl.mpak.util.StringManagerFactory;
import pl.mpak.util.files.FileExtensionFilter;
import pl.mpak.util.variant.Variant;

/**
 *
 * @author  akaluza
 */
public class ToolEditDialog extends javax.swing.JDialog {
  
  private final static StringManager stringManager = StringManagerFactory.getStringManager("orbada");

  private String to_id;
  private int modalResult = ModalResult.NONE;
  private Tool tool;
  private RecordLink toolLink;
  
  /** Creates new form DriverEditDialog
   * @param drv_id 
   * @throws pl.mpak.usedb.UseDBException 
   * @throws java.beans.IntrospectionException 
   */
  public ToolEditDialog(String to_id) throws IntrospectionException, UseDBException {
    super(SwingUtil.getRootFrame());
    this.to_id = to_id;
    initComponents();
    init();
  }
  
  /**
   *
   * @param drv_id 
   * @return 
   * @throws java.beans.IntrospectionException 
   * @throws pl.mpak.usedb.UseDBException 
   */
  public static int showDialog(String to_id) throws IntrospectionException, UseDBException {
    ToolEditDialog dialog = new ToolEditDialog(to_id);
    dialog.setVisible(true);
    return dialog.getModalResult();
  }
  
  private void init() throws IntrospectionException, UseDBException {
    SwingUtil.centerWithinScreen(this);

    toolLink = new RecordLink();
    toolLink.add("TO_TITLE", textTitle);
    toolLink.add("TO_COMMAND", textCommand);
    toolLink.add("TO_SOURCE", textSource);
    toolLink.add("TO_ARGUMENTS", textArguments);
    toolLink.add("TO_MENU", checkMenu, "selected", FieldLinkType.Boolean_YN);
    toolLink.add("TO_TOOLBUTTON", checkToolButton, "selected", FieldLinkType.Boolean_YN);
    toolLink.add("TO_BSH_GET_ARGUMENTS", textBshGetArguments);
    toolLink.add("TO_BSH_BEFORE_EXEC", textBshBeforeExec);
    toolLink.add("TO_BSH_AFTER_EXEC", textBshAfterExec);

    if (to_id != null) {
      tool = new Tool(InternalDatabase.get(), to_id);
    }
    else {
      tool = new Tool(InternalDatabase.get());
      tool.setUsrId(Application.get().getUserId());
    }
    toolLink.updateComponents(tool);
    updateIcon();

    getRootPane().setDefaultButton(buttonOk);
    getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(cmCancel.getShortCut(), "cmCancel");
    getRootPane().getActionMap().put("cmCancel", cmCancel);
  }
  
  public int getModalResult() {
    return modalResult;
  }
  
  private void updateIcon() {
    if (tool.fieldByName("to_icon").getValue().isNullValue()) {
      cmSelectIcon.setSmallIcon(null);
    }
    else {
      try {
        cmSelectIcon.setSmallIcon(new ImageIcon(tool.fieldByName("to_icon").getValue().getBinary()));
      } catch (Exception ex) {
        ExceptionUtil.processException(ex);
      }
    }
  }
  
  @Override
  public void dispose() {
    super.dispose();
  }
  
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    cmOk = new pl.mpak.sky.gui.swing.Action();
    cmCancel = new pl.mpak.sky.gui.swing.Action();
    cmSelectFile = new pl.mpak.sky.gui.swing.Action();
    cmSelectIcon = new pl.mpak.sky.gui.swing.Action();
    buttonOk = new javax.swing.JButton();
    buttonCancel = new javax.swing.JButton();
    jTabbedPane1 = new javax.swing.JTabbedPane();
    jPanel1 = new javax.swing.JPanel();
    textTitle = new pl.mpak.sky.gui.swing.comp.TextField();
    jLabel1 = new javax.swing.JLabel();
    jLabel2 = new javax.swing.JLabel();
    textCommand = new pl.mpak.sky.gui.swing.comp.TextField();
    jLabel3 = new javax.swing.JLabel();
    textSource = new pl.mpak.sky.gui.swing.comp.TextField();
    textArguments = new pl.mpak.sky.gui.swing.comp.TextField();
    jLabel4 = new javax.swing.JLabel();
    checkMenu = new javax.swing.JCheckBox();
    toolButton1 = new pl.mpak.sky.gui.swing.comp.ToolButton();
    checkToolButton = new javax.swing.JCheckBox();
    buttonIcon = new javax.swing.JButton();
    jPanel2 = new javax.swing.JPanel();
    textBshGetArguments = new OrbadaJavaSyntaxTextArea();
    jPanel3 = new javax.swing.JPanel();
    textBshBeforeExec = new OrbadaJavaSyntaxTextArea();
    jPanel4 = new javax.swing.JPanel();
    textBshAfterExec = new OrbadaJavaSyntaxTextArea();

    cmOk.setShortCut(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ENTER, 0));
    cmOk.setText(stringManager.getString("cmOk-text")); // NOI18N
    cmOk.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        cmOkActionPerformed(evt);
      }
    });

    cmCancel.setShortCut(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0));
    cmCancel.setText(stringManager.getString("cmCancel-text")); // NOI18N
    cmCancel.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        cmCancelActionPerformed(evt);
      }
    });

    cmSelectFile.setActionCommandKey("cmSelectFile");
    cmSelectFile.setSmallIcon(pl.mpak.sky.gui.swing.ImageManager.getImage("/pl/mpak/res/icons/open_document16.gif")); // NOI18N
    cmSelectFile.setText(stringManager.getString("ToolEditDialog-cmSelectFile-text")); // NOI18N
    cmSelectFile.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        cmSelectFileActionPerformed(evt);
      }
    });

    cmSelectIcon.setActionCommandKey("cmSelectIcon");
    cmSelectIcon.setText(stringManager.getString("ToolEditDialog-cmSelectIcon-text")); // NOI18N
    cmSelectIcon.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        cmSelectIconActionPerformed(evt);
      }
    });

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    setTitle(stringManager.getString("ToolEditDialog-title")); // NOI18N
    setModal(true);

    buttonOk.setAction(cmOk);
    buttonOk.setPreferredSize(new java.awt.Dimension(85, 25));

    buttonCancel.setAction(cmCancel);
    buttonCancel.setPreferredSize(new java.awt.Dimension(85, 25));

    jTabbedPane1.setFocusable(false);

    jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    jLabel1.setLabelFor(textTitle);
    jLabel1.setText(stringManager.getString("ToolEditDialog-title-dd")); // NOI18N

    jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    jLabel2.setLabelFor(textTitle);
    jLabel2.setText(stringManager.getString("ToolEditDialog-inner-command-dd")); // NOI18N

    jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    jLabel3.setLabelFor(textTitle);
    jLabel3.setText(stringManager.getString("ToolEditDialog-os-command-dd")); // NOI18N

    jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    jLabel4.setLabelFor(textTitle);
    jLabel4.setText(stringManager.getString("ToolEditDialog-exec-params-dd")); // NOI18N

    checkMenu.setText(stringManager.getString("ToolEditDialog-show-in-menu")); // NOI18N

    toolButton1.setAction(cmSelectFile);
    toolButton1.setPreferredSize(new java.awt.Dimension(24, 24));

    checkToolButton.setText(stringManager.getString("ToolEditDialog-show-as-button")); // NOI18N

    buttonIcon.setAction(cmSelectIcon);

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
          .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
          .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(checkToolButton)
          .addComponent(checkMenu)
          .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
            .addComponent(textSource, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(toolButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addComponent(textTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE)
          .addComponent(textCommand, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE)
          .addComponent(textArguments, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE)
          .addComponent(buttonIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addContainerGap())
    );
    jPanel1Layout.setVerticalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel1)
          .addComponent(textTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel2)
          .addComponent(textCommand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel4)
          .addComponent(textArguments, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(jPanel1Layout.createSequentialGroup()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(textSource, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(jLabel3))
            .addGap(6, 6, 6)
            .addComponent(checkMenu)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(checkToolButton))
          .addComponent(toolButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(buttonIcon)
        .addContainerGap(26, Short.MAX_VALUE))
    );

    jTabbedPane1.addTab(stringManager.getString("ToolEditDialog-definition"), jPanel1); // NOI18N

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
      jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel2Layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(textBshGetArguments, javax.swing.GroupLayout.DEFAULT_SIZE, 435, Short.MAX_VALUE)
        .addContainerGap())
    );
    jPanel2Layout.setVerticalGroup(
      jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel2Layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(textBshGetArguments, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
        .addContainerGap())
    );

    jTabbedPane1.addTab(stringManager.getString("ToolEditDialog-bsh-get-params"), jPanel2); // NOI18N

    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
    jPanel3.setLayout(jPanel3Layout);
    jPanel3Layout.setHorizontalGroup(
      jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel3Layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(textBshBeforeExec, javax.swing.GroupLayout.DEFAULT_SIZE, 435, Short.MAX_VALUE)
        .addContainerGap())
    );
    jPanel3Layout.setVerticalGroup(
      jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel3Layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(textBshBeforeExec, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
        .addContainerGap())
    );

    jTabbedPane1.addTab(stringManager.getString("ToolEditDialog-bsh-before-exec"), jPanel3); // NOI18N

    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
    jPanel4.setLayout(jPanel4Layout);
    jPanel4Layout.setHorizontalGroup(
      jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel4Layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(textBshAfterExec, javax.swing.GroupLayout.DEFAULT_SIZE, 435, Short.MAX_VALUE)
        .addContainerGap())
    );
    jPanel4Layout.setVerticalGroup(
      jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel4Layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(textBshAfterExec, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
        .addContainerGap())
    );

    jTabbedPane1.addTab(stringManager.getString("ToolEditDialog-bsh-after-exec"), jPanel4); // NOI18N

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
          .addGroup(layout.createSequentialGroup()
            .addComponent(buttonOk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(buttonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(buttonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(buttonOk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addContainerGap())
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

private void cmCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmCancelActionPerformed
  modalResult = ModalResult.CANCEL;
  dispose();
}//GEN-LAST:event_cmCancelActionPerformed

private void cmOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmOkActionPerformed
 try {
    toolLink.updateRecord(tool);
    if (tool.isChanged()) {
      if (to_id == null) {
        tool.applyInsert();
      }
      else {
        tool.applyUpdate();
      }
    }
    modalResult = ModalResult.OK;
    dispose();
  } catch (Exception ex) {
    MessageBox.show(this, stringManager.getString("error"), ex.getMessage(), new int[] {ModalResult.OK});
  }
}//GEN-LAST:event_cmOkActionPerformed

private void cmSelectFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmSelectFileActionPerformed
  File file = FileUtil.selectFileToOpen(this, new File(textSource.getText()), null);
  if (file != null) {
    textSource.setText(file.toString());
  }
}//GEN-LAST:event_cmSelectFileActionPerformed

private void cmSelectIconActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmSelectIconActionPerformed
  if (!tool.fieldByName("to_icon").getValue().isNullValue()) {
    switch (MessageBox.show(this, stringManager.getString("ToolEditDialog-icon"), stringManager.getString("ToolEditDialog-icon-seleted-delete-q"), ModalResult.YESNOCANCEL, MessageBox.QUESTION)) {
      case ModalResult.CANCEL:
        return;
      case ModalResult.YES: {
        tool.fieldByName("to_icon").setValue(null);
        updateIcon();
        return;
      }
    }
  }
  File file = FileUtil.selectFileToOpen(this, new FileExtensionFilter[] {new FileExtensionFilter(stringManager.getString("ToolEditDialog-pic-files"), new String[] {".jpg", ".jpeg", ".gif", ".png"})});
  if (file != null) {
    try {
      tool.fieldByName("to_icon").setValue(new Variant(StreamUtil.stream2Array(new FileInputStream(file))));
      updateIcon();
    } catch (IOException ex) {
      MessageBox.show(this, stringManager.getString("error"), ex.getMessage(), new int[] {ModalResult.OK});
    }
  }
}//GEN-LAST:event_cmSelectIconActionPerformed
  
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton buttonCancel;
  private javax.swing.JButton buttonIcon;
  private javax.swing.JButton buttonOk;
  private javax.swing.JCheckBox checkMenu;
  private javax.swing.JCheckBox checkToolButton;
  private pl.mpak.sky.gui.swing.Action cmCancel;
  private pl.mpak.sky.gui.swing.Action cmOk;
  private pl.mpak.sky.gui.swing.Action cmSelectFile;
  private pl.mpak.sky.gui.swing.Action cmSelectIcon;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JPanel jPanel2;
  private javax.swing.JPanel jPanel3;
  private javax.swing.JPanel jPanel4;
  private javax.swing.JTabbedPane jTabbedPane1;
  private pl.mpak.sky.gui.swing.comp.TextField textArguments;
  private OrbadaJavaSyntaxTextArea textBshAfterExec;
  private OrbadaJavaSyntaxTextArea textBshBeforeExec;
  private OrbadaJavaSyntaxTextArea textBshGetArguments;
  private pl.mpak.sky.gui.swing.comp.TextField textCommand;
  private pl.mpak.sky.gui.swing.comp.TextField textSource;
  private pl.mpak.sky.gui.swing.comp.TextField textTitle;
  private pl.mpak.sky.gui.swing.comp.ToolButton toolButton1;
  // End of variables declaration//GEN-END:variables
  
}
