/*
 * QueryTablePanel.java
 *
 * Created on 21 styczeñ 2008, 20:32
 */

package pl.mpak.orbada.gui.comps.table;

import java.io.Closeable;
import java.io.IOException;
import java.util.Vector;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import pl.mpak.orbada.Consts;
import pl.mpak.sky.gui.mr.ModalResult;
import pl.mpak.sky.gui.swing.MessageBox;
import pl.mpak.usedb.core.Database;
import pl.mpak.usedb.core.Query;
import pl.mpak.usedb.util.QueryUtil;
import pl.mpak.util.StringManager;
import pl.mpak.util.StringManagerFactory;
import pl.mpak.util.Titleable;

/**
 *
 * @author  akaluza
 */
public class VerticalQueryTablePanel extends javax.swing.JPanel implements Titleable, Closeable {
  
  private final static StringManager stringManager = StringManagerFactory.getStringManager(Consts.class);

  private Database database;
  private String title;
  
  /** Creates new form QueryTablePanel */
  public VerticalQueryTablePanel(Database database, String title) {
    this.database = database;
    this.title = title;
    initComponents();
    init();
  }

  public VerticalQueryTablePanel(Database database) {
    this(database, null);
  }

  private void init() {
  }
  
  public void refresh(String sqlText) {
    Query query = database.createQuery();
    try {
      refresh(query.open(sqlText));
    } catch (Exception ex) {
      MessageBox.show(this, stringManager.getString("error"), ex.getMessage(), ModalResult.OK, MessageBox.ERROR);
    }
    finally {
      query.close();
    }
  }
  
  public void refresh(Query query) {
    try {
      final int column = tableData.getSelectedColumn();
      final int index = Math.max(0, tableData.getSelectedRow());
      Vector<Vector<String>> data = QueryUtil.rotateRows(query, new int[] {QueryUtil.Column.TITLE, QueryUtil.Column.DATA});
      Vector<String> columnNames = new Vector<String>();
      columnNames.add(stringManager.getString("VerticalQueryTablePanel-name"));
      for (int c=1; c<data.get(0).size(); c++) {
        columnNames.add(stringManager.getString("VerticalQueryTablePanel-value"));
      }
      tableData.setModel(new DefaultTableModel(data, columnNames) {
        @Override
        public boolean isCellEditable(int row, int col) {
          return false;
        }
      });
      if (data.size() > 0) {
        tableData.changeSelection(Math.min(index, tableData.getRowCount() -1), column);
      }
    } catch (Exception ex) {
      MessageBox.show(this, stringManager.getString("error"), ex.getMessage(), ModalResult.OK, MessageBox.ERROR);
    }
  }
  
  public void close() throws IOException {
  }

  public void setTitle(String title) {
    this.title = title;
  }
  
  public String getTitle() {
    return title;
  }
  
  public JTable getTable() {
    return tableData;
  }
  
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jScrollPane1 = new javax.swing.JScrollPane();
    tableData = new Table();

    setLayout(new java.awt.BorderLayout());

    jScrollPane1.setViewportView(tableData);

    add(jScrollPane1, java.awt.BorderLayout.CENTER);
  }// </editor-fold>//GEN-END:initComponents
  
  
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JScrollPane jScrollPane1;
  private Table tableData;
  // End of variables declaration//GEN-END:variables

}
